# Since we're running as non-root, comment out the user directive
# user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /tmp/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Security: Hide nginx version
    server_tokens off;

    # Security: Rate limiting zone (must be in http context)
    limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Security headers (applied globally)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self';" always;

    server {
        listen 8080;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # Security: Limit request size
        client_max_body_size 10M;
        
        # Security: Apply rate limiting
        limit_req zone=one burst=10 nodelay;

        # Performance: Enhanced caching headers for different asset types
        location ~* \.(js|css)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            # Enable gzip for these specific files
            gzip_static on;
        }

        location ~* \.(png|jpg|jpeg|gif|ico|svg|webp|avif)$ {
            expires 6M;
            add_header Cache-Control "public, immutable";
        }

        location ~* \.(woff|woff2|ttf|eot|otf)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin "*";
        }

        # Performance: Enable caching for HTML with validation
        location ~* \.html$ {
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
        }

        # Performance: Service worker cache optimization
        location = /sw.js {
            expires 0;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }

        # Handle client-side routing
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
