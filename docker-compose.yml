version: '3.8'

services:
  # Development environment
  simulation-dev:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    profiles:
      - dev
    restart: unless-stopped

  # Staging environment
  simulation-staging:
    image: ${IMAGE_NAME:-organism-simulation}:${IMAGE_TAG:-staging}
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=staging
    restart: unless-stopped
    profiles:
      - staging
    healthcheck:
      test: ["CMD", "/bin/sh", "/healthcheck.sh"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

  # Production environment
  simulation-prod:
    image: ${IMAGE_NAME:-organism-simulation}:${IMAGE_TAG:-production}
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "80:8080"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    profiles:
      - prod
    healthcheck:
      test: ["CMD", "/bin/sh", "/healthcheck.sh"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Reverse proxy for production (optional)
  nginx-proxy:
    image: nginx:alpine
    ports:
      - "443:443"
    volumes:
      - ./nginx-proxy.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - simulation-prod
    profiles:
      - prod-ssl
    restart: unless-stopped

networks:
  default:
    name: simulation-network
