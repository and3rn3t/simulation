name: E2E Test Trigger

on:
  # Lightweight workflow that can trigger E2E tests without blocking CI/CD
  workflow_call:
    inputs:
      test_filter:
        description: 'Test filter for E2E tests'
        required: false
        default: '@smoke'
        type: string
      blocking:
        description: 'Should this block the calling workflow'
        required: false
        default: false
        type: boolean

jobs:
  trigger-e2e:
    name: Trigger E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
    - name: Trigger E2E workflow
      uses: actions/github-script@v7
      with:
        script: |
          const response = await github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'e2e-tests.yml',
            ref: context.ref,
            inputs: {
              test_filter: '${{ inputs.test_filter }}',
              browser: 'chromium',
              parallel_jobs: '4'
            }
          });
          
          console.log('üé≠ E2E tests triggered successfully');
          console.log(`Filter: ${{ inputs.test_filter }}`);
          console.log(`Blocking: ${{ inputs.blocking }}`);

    - name: Wait for E2E completion (if blocking)
      if: inputs.blocking == true
      uses: actions/github-script@v7
      with:
        script: |
          console.log('‚è≥ Waiting for E2E tests to complete...');
          
          // Poll for workflow completion
          let completed = false;
          let attempts = 0;
          const maxAttempts = 120; // 20 minutes max wait
          
          while (!completed && attempts < maxAttempts) {
            await new Promise(resolve => setTimeout(resolve, 10000)); // Wait 10 seconds
            
            const workflows = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'e2e-tests.yml',
              per_page: 5
            });
            
            const recentRun = workflows.data.workflow_runs[0];
            if (recentRun && recentRun.status === 'completed') {
              completed = true;
              if (recentRun.conclusion === 'success') {
                console.log('‚úÖ E2E tests passed');
              } else {
                console.log('‚ùå E2E tests failed');
                core.setFailed('E2E tests failed');
              }
            }
            
            attempts++;
          }
          
          if (!completed) {
            console.log('‚è∞ E2E tests timed out');
            core.setFailed('E2E tests timed out after 20 minutes');
          }
